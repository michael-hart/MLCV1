%% Initialisation

% Call init script in subfolder
init_rf2017;

% Set whether to plot results
plot_results = 0;

% Load the given toy spiral data
% Also allowed Toy_Gaussian, Toy_Circle, Caltech
[data_train, data_test] = getData('Toy_Spiral');

% Do a test plot to check the data is working
if (plot_results)
    plot_toydata(data_train);
    scatter(data_test(:,1),data_test(:,2),'.b');
end

%% Bag the data

[N,D] = size(data_train);
frac = 1 - 1/exp(1); % Bootstrap sampling fraction: 1 - 1/e (63.2%)
[labels,~] = unique(data_train(:,end));

idx = randsample(N,ceil(N*frac),1); % A new training set for each tree is generated by random sampling from dataset WITH replacement.
prior = histc(data_train(idx,end),labels)/length(idx);

% In data_train, we have 3 columns
% Column 1 is x, Column 2 is y, Column 3 is Class

%% Split the first node and investigate

% Set the random forest parameters
param.num = 1;         % Number of trees
param.depth = 1;        % trees depth
param.splitNum = 100;     % Number of split functions to try
param.split = 'IG';     % Currently support 'information gain' only
param.split_func = 'y-aligned';

% tree = growTrees(bag_data, param)

rootNode = struct('idx', idx, 't', nan, 'dim', -1, 'prob', []);
[newRoot, rootL, rootR] = splitNode(data_train, rootNode, param);

% [node,nodeL,nodeR] = splitNode(bag_data,node,param)

